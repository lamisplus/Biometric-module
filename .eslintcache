[{"C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\index.js":"1","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\App.js":"2","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\BiometricList.js":"6","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\AddBiometric.js":"7","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\EditBiometric.js":"8","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\api.js":"9","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\jsx\\layouts\\PageTitle.js":"10"},{"size":753,"mtime":1655291395989,"results":"11","hashOfConfig":"12"},{"size":839,"mtime":1655308432877,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1655291399217,"results":"14","hashOfConfig":"12"},{"size":9235,"mtime":1655291396401,"results":"15","hashOfConfig":"12"},{"size":3056,"mtime":1655291396402,"results":"16","hashOfConfig":"12"},{"size":10777,"mtime":1655371159218,"results":"17","hashOfConfig":"12"},{"size":8505,"mtime":1655306401652,"results":"18","hashOfConfig":"12"},{"size":8641,"mtime":1655370555711,"results":"19","hashOfConfig":"12"},{"size":422,"mtime":1655372172194,"results":"20","hashOfConfig":"12"},{"size":543,"mtime":1655291399197,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"zro7bq",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\index.js",["48"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\App.js",["49"],"import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport BiometricList from './main/webapp/jsx/components/Biometric/BiometricList'\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         \r\n          <Route path=\"/\">\r\n            <BiometricList />\r\n          </Route>\r\n                          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\BiometricList.js",["50","51","52","53"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\n// import { MdDeleteForever, MdModeEdit } from \"react-icons/md\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport AddBiometricDevice from \"./AddBiometric\";\r\nimport EditBiometric from './EditBiometric';\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\n\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Icon, Label} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { forwardRef } from 'react';\r\nimport { Button} from \"react-bootstrap\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n//Device NAme and ID for delete \r\nlet deviceName=\"\"\r\n\r\nconst BiometricList = (props) => {\r\n    let history = useHistory();\r\n    const [collectModal, setcollectModal] = useState([])\r\n    const [biometricList, setBiometricList] = useState([])\r\n    const classes = useStyles();\r\n    const [addNewDeviceModal, setAddNewDeviceModal] = useState(false) //New Device   Modal\r\n    const togglesetAddNewDeviceModal = () => setAddNewDeviceModal(!addNewDeviceModal)\r\n    const [editDeviceModal, setEditDeviceModal] = useState(false) //Edit Module Menu  Modal\r\n    const togglesetEditDeviceModal = () => setEditDeviceModal(!editDeviceModal)\r\n    const [loading, setLoading] = useState(true);\r\n    const [modal, setModal] = useState(false);\r\n    const [deviceId, setdeviceId] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        loadBiometricDevices()\r\n    }, []); //componentDidMount to get module menus\r\n   // Method to load Biometric devices\r\n        async function loadBiometricDevices() {\r\n            axios\r\n                .get(`${baseUrl}biometrics/devices`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setBiometricList(response.data);                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n\r\n    const deleteModal = (row) => {\r\n        setdeviceId(row.id);\r\n        deviceName= row.name\r\n        \r\n        setModal(!modal);\r\n        \r\n    };\r\n    // Delete Function\r\n    const onDelete = () => {\r\n        axios\r\n            .delete(`${baseUrl}biometrics/device/${deviceId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => { \r\n                loadBiometricDevices()               \r\n                toast.success(\"Biometric Device Deleted Successfully!\")\r\n                setModal(false)                  \r\n            })\r\n            .catch((error) => { \r\n                toast.error(\"Something went wrong. Please try again...\")   \r\n            });\r\n    };\r\n\r\n    const loadNewDeviceModal = (row) => {\r\n        setAddNewDeviceModal(!addNewDeviceModal)\r\n    }\r\n    const editDevice = (row) => {\r\n        setcollectModal({...collectModal, ...row});\r\n        setEditDeviceModal(!editDeviceModal)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <br/><br/>\r\n            <PageTitle activeMenu=\"Biometric List\" motherMenu=\"Biometric Setup \" />\r\n\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                        <MatButton\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2\"\r\n                            startIcon={<FaPlus size=\"10\"/>}\r\n                            onClick={()=>loadNewDeviceModal()}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>New </span>\r\n                            &nbsp;&nbsp;\r\n                            <span style={{ textTransform: \"lowercase\" }}> Device</span>\r\n                        </MatButton>\r\n\r\n                    <br />\r\n\r\n                    <br />\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Biometric List\"\r\n                columns={[\r\n                    //{ title: \"Id\", field: \"id\", filtering: false },\r\n                    { title: \"Name\", field: \"name\" },\r\n                    { title: \"URL\", field: \"url\", filtering: false },\r\n                    { title: \"Status\", field: \"status\", filtering: false },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={loading}\r\n                data={biometricList.map((row) => ({\r\n                    //id: row.id,\r\n                    name: row.name,\r\n                    url: row.url,\r\n                    type: row.type,\r\n                    status: row.active===true ? \"Active\" : \"Not Active\",\r\n\r\n                    actions: (\r\n                        <div>\r\n                           \r\n                            <Label as='a' color='blue' className=\"ms-1\" size='mini' onClick={() =>  editDevice(row)}>\r\n                                <Icon name='pencil' /> Edit\r\n                            </Label>\r\n\r\n                            <Label as='a' color='red' onClick={() =>  deleteModal(row)}  size='mini'>\r\n                                <Icon name='trash' /> Delete\r\n                            </Label>\r\n\r\n\r\n                        </div>\r\n                    ),\r\n                }))}\r\n                options={{\r\n                    headerStyle: {\r\n\r\n                        color: \"#000\",\r\n                    },\r\n\r\n                    searchFieldStyle: {\r\n                        width: \"150%\",\r\n                        margingLeft: \"150px\",\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: \"left\",\r\n                }}\r\n            />\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={modal} >\r\n\r\n                <Modal.Header>\r\n                    <Modal.Title>Delete Menu</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={() => setModal(false)}\r\n                    >\r\n\r\n                    </Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Are you sure you want to delete Device   <b>{deviceName}</b></p>\r\n                    <br/>\r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"ms-2\"\r\n                        startIcon={<SaveIcon />}\r\n\r\n                        onClick={() => onDelete()}\r\n                    >\r\n                        Yes\r\n                    </MatButton>\r\n                    <MatButton\r\n                        variant=\"contained\"\r\n                        className={classes.button }\r\n                        startIcon={<CancelIcon />}\r\n                        onClick={() => setModal(false)}\r\n                    >\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Cancel\r\n                    </span>\r\n                    </MatButton>\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n            <AddBiometricDevice modalstatus={addNewDeviceModal} togglestatus={togglesetAddNewDeviceModal}  loadBiometricDevices={loadBiometricDevices} />\r\n            <EditBiometric modalstatus={editDeviceModal} togglestatus={togglesetEditDeviceModal} datasample={collectModal}  loadBiometricDevices={loadBiometricDevices}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default BiometricList;\r\n","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\AddBiometric.js",["54","55","56","57"],"import React, { useState}   from 'react';\r\nimport {\r\n Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst AddBiometricDevice = (props) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [errors, setErrors] = useState({});\r\n    const [details, setDetails] =  useState({ active: \"\", name:\"\", url:\"\", })\r\n     \r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.parentId = details.parentId!==\"\" ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n        temp.active = details.active ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n    }\r\n\r\n    //Method to update module menu\r\n    const AddDevice = e => {\r\n        e.preventDefault()\r\n        if(validate()){\r\n            axios\r\n            .post(`${baseUrl}biometrics/device`,details,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => { \r\n                props.loadBiometricDevices()               \r\n                toast.success(\"Biometric Device Added Successfully!\")\r\n                props.togglestatus()                  \r\n            })\r\n            .catch((error) => { \r\n                toast.error(\"Something went wrong. Please try again...\")   \r\n            });\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"md\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Add Biometric Device</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n     \r\n                    <div className=\"col-md-12 col-md-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <div className=\"basic-form\">\r\n                                    <form onSubmit={(e) => e.preventDefault()}>\r\n                                       \r\n                                        <div className=\"row\">\r\n                                            \r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label> Name</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    id=\"name\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.name}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                />\r\n                                                {errors.name !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.name}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Url</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"url\"\r\n                                                    id=\"url\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.url}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                    required\r\n                                                />\r\n                                                \r\n                                                 {errors.url !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.url}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Status</label>\r\n                                                \r\n                                                <select\r\n                                                //defaultValue={\"true\"}\r\n                                                name=\"active\"\r\n                                                id=\"active\"\r\n                                                className=\"form-control wide\"\r\n                                                onChange={handleOtherFieldInputChange}\r\n                                                >  \r\n                                                <option value=\"\"> Select</option>                                 \r\n                                                <option value=\"true\"> Active</option>\r\n                                                <option value=\"false\">Not Active </option>\r\n                                                </select>\r\n                                                {errors.active !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.active}</span>\r\n                                                ) : \"\" } \r\n                                            </div>\r\n\r\n                                            {/*Second Row of the Field by Col */}\r\n\r\n                                        </div>\r\n                                        <MatButton\r\n                                            type='submit'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            className={classes.button}\r\n                                            startIcon={<SaveIcon />}\r\n                                            disabled={loading}\r\n                                            onClick={AddDevice}\r\n\r\n                                        >\r\n\r\n                                            <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                        </MatButton>\r\n                                        <MatButton\r\n                                            variant='contained'\r\n                                            color='default'\r\n                                            onClick={closeModal}\r\n                                            startIcon={<CancelIcon />}>\r\n                                            <span style={{textTransform: 'capitalize'}}>Cancel</span>\r\n                                        </MatButton>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddBiometricDevice;\r\n","C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\EditBiometric.js",["58","59","60","61"],"import React, { useState, useEffect}   from 'react';\r\nimport {\r\n Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}))\r\n\r\nconst EditBiometricDevice = (props) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [errors, setErrors] = useState({});\r\n    const [details, setDetails] =  useState(props.datasample )\r\n    useEffect(() => {\r\n        setDetails(props.datasample)\r\n    }, [props.datasample]);\r\n    console.log(details)\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.parentId = details.parentId!==\"\" ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n        temp.active = details.active ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n    }\r\n\r\n    //Method to update module menu\r\n    const AddDevice = e => {\r\n        e.preventDefault()\r\n        if(validate()){\r\n            axios\r\n            .put(`${baseUrl}biometrics/device/${details.id}`,details,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {                \r\n                props.loadBiometricDevices()               \r\n                toast.success(\"Biometric Device Updated Successfully!\")\r\n                props.togglestatus()                  \r\n            })\r\n            .catch((error) => { \r\n                toast.error(\"Something went wrong. Please try again...\")   \r\n            });\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"md\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Edit Biometric Device</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n     \r\n                    <div className=\"col-md-12 col-md-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <div className=\"basic-form\">\r\n                                    <form onSubmit={(e) => e.preventDefault()}>\r\n                                       \r\n                                        <div className=\"row\">\r\n                                            \r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label> Name</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    id=\"name\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.name}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                />\r\n                                                {errors.name !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.name}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Url</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"url\"\r\n                                                    id=\"url\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.url}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                    required\r\n                                                />\r\n                                                \r\n                                                 {errors.url !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.url}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Status</label>\r\n                                                \r\n                                                <select\r\n                                                defaultValue={\"true\"}\r\n                                                name=\"active\"\r\n                                                id=\"active\"\r\n                                                className=\"form-control wide\"\r\n                                                onChange={handleOtherFieldInputChange}\r\n                                                >  \r\n                                                <option value=\"\"> Select</option>                                 \r\n                                                <option value=\"true\"> Active</option>\r\n                                                <option value=\"false\">Not Active </option>\r\n                                                </select>\r\n                                                {errors.active !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.active}</span>\r\n                                                ) : \"\" } \r\n                                            </div>\r\n\r\n                                            {/*Second Row of the Field by Col */}\r\n\r\n                                        </div>\r\n                                        <MatButton\r\n                                            type='submit'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            className={classes.button}\r\n                                            startIcon={<SaveIcon />}\r\n                                            disabled={loading}\r\n                                            onClick={AddDevice}\r\n\r\n                                        >\r\n\r\n                                            <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                        </MatButton>\r\n                                        <MatButton\r\n                                            variant='contained'\r\n                                            color='default'\r\n                                            onClick={closeModal}\r\n                                            startIcon={<CancelIcon />}>\r\n                                            <span style={{textTransform: 'capitalize'}}>Cancel</span>\r\n                                        </MatButton>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default EditBiometricDevice;\r\n",["62","63"],"C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\api.js",[],"C:\\Users\\Mathew\\OneDrive - Palladium International, LLC\\Documents\\PalladiumProject\\LamisPlus\\biometric-module\\src\\main\\webapp\\jsx\\layouts\\PageTitle.js",[],{"ruleId":"64","severity":1,"message":"65","line":4,"column":41,"nodeType":"66","messageId":"67","endLine":4,"endColumn":47},{"ruleId":"64","severity":1,"message":"65","line":3,"column":19,"nodeType":"66","messageId":"67","endLine":3,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":4,"column":9,"nodeType":"66","messageId":"67","endLine":4,"endColumn":13},{"ruleId":"64","severity":1,"message":"69","line":13,"column":10,"nodeType":"66","messageId":"67","endLine":13,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":18,"column":10,"nodeType":"72","messageId":"73","endLine":18,"endColumn":24,"fix":"74"},{"ruleId":"64","severity":1,"message":"75","line":79,"column":9,"nodeType":"66","messageId":"67","endLine":79,"endColumn":16},{"ruleId":"70","severity":1,"message":"71","line":13,"column":10,"nodeType":"72","messageId":"73","endLine":13,"endColumn":24,"fix":"76"},{"ruleId":"64","severity":1,"message":"77","line":27,"column":21,"nodeType":"66","messageId":"67","endLine":27,"endColumn":31},{"ruleId":"64","severity":1,"message":"78","line":28,"column":11,"nodeType":"66","messageId":"67","endLine":28,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":44,"column":49,"nodeType":"81","messageId":"82","endLine":44,"endColumn":51},{"ruleId":"70","severity":1,"message":"71","line":13,"column":10,"nodeType":"72","messageId":"73","endLine":13,"endColumn":24,"fix":"83"},{"ruleId":"64","severity":1,"message":"77","line":27,"column":21,"nodeType":"66","messageId":"67","endLine":27,"endColumn":31},{"ruleId":"64","severity":1,"message":"78","line":28,"column":11,"nodeType":"66","messageId":"67","endLine":28,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":47,"column":49,"nodeType":"81","messageId":"82","endLine":47,"endColumn":51},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'TiArrowBack' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"88","text":"89"},"'history' is assigned a value but never used.",{"range":"90","text":"89"},"'setLoading' is assigned a value but never used.","'datasample' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"91","text":"89"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],[831,845],"token",[471,485],[482,496],"no-global-assign","no-unsafe-negation"]