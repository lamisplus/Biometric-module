
[{"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\index.js":"1","C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\App.js":"2","C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\context\\ThemeDemo.js":"5","C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\BiometricList.js":"6","C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\AddBiometric.js":"7","C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\api.js":"8","C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\EditBiometric.js":"9","C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\jsx\\layouts\\PageTitle.js":"10","C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\jsx\\components\\Pims\\Configuration.js":"11","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\index.js":"12","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\App.js":"13","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\reportWebVitals.js":"14","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\context\\ThemeContext.js":"15","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\context\\ThemeDemo.js":"16","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\BiometricList.js":"17","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\api.js":"18","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\AddBiometric.js":"19","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\EditBiometric.js":"20","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\jsx\\layouts\\PageTitle.js":"21","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\jsx\\components\\Pims\\Configuration.js":"22"},{"size":753,"mtime":1702664193670,"results":"23","hashOfConfig":"24"},{"size":839,"mtime":1702664193668,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1702664199318,"results":"26","hashOfConfig":"24"},{"size":9235,"mtime":1702664194226,"results":"27","hashOfConfig":"24"},{"size":3056,"mtime":1702664194227,"results":"28","hashOfConfig":"24"},{"size":10886,"mtime":1702664199195,"results":"29","hashOfConfig":"24"},{"size":11454,"mtime":1702664199193,"results":"30","hashOfConfig":"24"},{"size":422,"mtime":1702664194224,"results":"31","hashOfConfig":"24"},{"size":11028,"mtime":1702664199198,"results":"32","hashOfConfig":"24"},{"size":543,"mtime":1702664199283,"results":"33","hashOfConfig":"24"},{"size":9652,"mtime":1702664199202,"results":"34","hashOfConfig":"24"},{"size":753,"mtime":1681809271740,"results":"35","hashOfConfig":"36"},{"size":839,"mtime":1681809271738,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1681809280714,"results":"38","hashOfConfig":"36"},{"size":9235,"mtime":1681809272800,"results":"39","hashOfConfig":"36"},{"size":3056,"mtime":1681809272805,"results":"40","hashOfConfig":"36"},{"size":10886,"mtime":1693400035893,"results":"41","hashOfConfig":"36"},{"size":422,"mtime":1711378167072,"results":"42","hashOfConfig":"36"},{"size":11454,"mtime":1681809280539,"results":"43","hashOfConfig":"36"},{"size":11028,"mtime":1681809280547,"results":"44","hashOfConfig":"36"},{"size":543,"mtime":1681809280660,"results":"45","hashOfConfig":"36"},{"size":9684,"mtime":1711380525912,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vcxc2w",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},"xfvons",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\index.js",["97"],"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\App.js",["98"],"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\BiometricList.js",["99","100","101","102","103"],"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\AddBiometric.js",["104","105","106","107"],"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\api.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\EditBiometric.js",["108","109","110","111"],"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\jsx\\layouts\\PageTitle.js",[],"C:\\Users\\victor.ajor\\Lamisplus_public\\Biometric-module\\src\\main\\webapp\\jsx\\components\\Pims\\Configuration.js",["112","113"],"C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\index.js",["114"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n",[],"C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\App.js",["115"],"import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\n\r\nimport BiometricList from './main/webapp/jsx/components/Biometric/BiometricList'\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n         \r\n          <Route path=\"/\">\r\n            <BiometricList />\r\n          </Route>\r\n                          \r\n        </Switch>\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\BiometricList.js",["116","117","118","119","120"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\n// import { MdDeleteForever, MdModeEdit } from \"react-icons/md\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport PageTitle from \"../../layouts/PageTitle\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport AddBiometricDevice from \"./AddBiometric\";\r\nimport EditBiometric from \"./EditBiometric\";\r\nimport Configuration from \"../Pims/Configuration\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\n\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-dual-listbox/lib/react-dual-listbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Icon, Label } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { forwardRef } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n//Device NAme and ID for delete\r\nlet deviceName = \"\";\r\n\r\nconst BiometricList = (props) => {\r\n  let history = useHistory();\r\n  const [collectModal, setcollectModal] = useState([]);\r\n  const [biometricList, setBiometricList] = useState([]);\r\n  const classes = useStyles();\r\n  const [addNewDeviceModal, setAddNewDeviceModal] = useState(false); //New Device   Modal\r\n  const togglesetAddNewDeviceModal = () =>\r\n    setAddNewDeviceModal(!addNewDeviceModal);\r\n  const [editDeviceModal, setEditDeviceModal] = useState(false); //Edit Module Menu  Modal\r\n  const togglesetEditDeviceModal = () => setEditDeviceModal(!editDeviceModal);\r\n  const [loading, setLoading] = useState(true);\r\n  const [modal, setModal] = useState(false);\r\n  const [deviceId, setdeviceId] = useState(\"\");\r\n  const [permissions, setPermissions] = useState([]);\r\n\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const toggleModal = () => setShowModal(!showModal);\r\n\r\n  useEffect(() => {\r\n    loadBiometricDevices();\r\n    userPermission();\r\n  }, []); //componentDidMount to get module menus\r\n  // Method to load Biometric devices\r\n  async function loadBiometricDevices() {\r\n    axios\r\n      .get(`${baseUrl}biometrics/devices`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setBiometricList(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n  //Get list of Permissions\r\n  const userPermission = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPermissions(response.data.permissions);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const deleteModal = (row) => {\r\n    setdeviceId(row.id);\r\n    deviceName = row.name;\r\n\r\n    setModal(!modal);\r\n  };\r\n  // Delete Function\r\n  const onDelete = () => {\r\n    axios\r\n      .delete(`${baseUrl}biometrics/device/${deviceId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        loadBiometricDevices();\r\n        toast.success(\"Biometric Device Deleted Successfully!\");\r\n        setModal(false);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Something went wrong. Please try again...\");\r\n      });\r\n  };\r\n\r\n  const loadNewDeviceModal = (row) => {\r\n    setAddNewDeviceModal(!addNewDeviceModal);\r\n  };\r\n  const editDevice = (row) => {\r\n    setcollectModal({ ...collectModal, ...row });\r\n    setEditDeviceModal(!editDeviceModal);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <br />\r\n      <br />\r\n      <PageTitle activeMenu=\"Biometric List\" motherMenu=\"Biometric Setup \" />\r\n\r\n      <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n          <MatButton\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end ms-2\"\r\n            startIcon={<FaPlus size=\"10\" />}\r\n            onClick={() => toggleModal()}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>\r\n              PIMS Configuration{\" \"}\r\n            </span>\r\n          </MatButton>{\" \"}\r\n          <MatButton\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-end ms-2\"\r\n            startIcon={<FaPlus size=\"10\" />}\r\n            onClick={() => loadNewDeviceModal()}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>New </span>\r\n            &nbsp;&nbsp;\r\n            <span style={{ textTransform: \"lowercase\" }}> Device</span>\r\n          </MatButton>\r\n          <br />\r\n          <br />\r\n          <MaterialTable\r\n            icons={tableIcons}\r\n            title=\"Biometric List\"\r\n            columns={[\r\n              //{ title: \"Id\", field: \"id\", filtering: false },\r\n              { title: \"Name\", field: \"name\" },\r\n              { title: \"URL\", field: \"url\", filtering: false },\r\n              { title: \"Port\", field: \"port\", filtering: false },\r\n              { title: \"Default\", field: \"status\", filtering: false },\r\n\r\n              { title: \"Actions\", field: \"actions\", filtering: false },\r\n            ]}\r\n            isLoading={loading}\r\n            data={biometricList.map((row) => ({\r\n              //id: row.id,\r\n              name: row.name,\r\n              url: row.url,\r\n              port: row.port,\r\n              type: row.type,\r\n              status: row.active === true ? \"Active\" : \"Not Active\",\r\n\r\n              actions: (\r\n                <div>\r\n                  <Label\r\n                    as=\"a\"\r\n                    color=\"blue\"\r\n                    className=\"ms-1\"\r\n                    size=\"mini\"\r\n                    onClick={() => editDevice(row)}\r\n                  >\r\n                    <Icon name=\"pencil\" /> Edit\r\n                  </Label>\r\n                  <Label\r\n                    as=\"a\"\r\n                    color=\"red\"\r\n                    onClick={() => deleteModal(row)}\r\n                    size=\"mini\"\r\n                  >\r\n                    <Icon name=\"trash\" /> Delete\r\n                  </Label>\r\n                </div>\r\n              ),\r\n            }))}\r\n            options={{\r\n              headerStyle: {\r\n                color: \"#000\",\r\n              },\r\n\r\n              searchFieldStyle: {\r\n                width: \"150%\",\r\n                margingLeft: \"150px\",\r\n              },\r\n              filtering: false,\r\n              exportButton: false,\r\n              searchFieldAlignment: \"left\",\r\n            }}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n      <Modal show={modal}>\r\n        <Modal.Header>\r\n          <Modal.Title>Delete Menu</Modal.Title>\r\n          <Button\r\n            variant=\"\"\r\n            className=\"btn-close\"\r\n            onClick={() => setModal(false)}\r\n          ></Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            Are you sure you want to delete Device <b>{deviceName}</b>\r\n          </p>\r\n          <br />\r\n          <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"ms-2\"\r\n            startIcon={<SaveIcon />}\r\n            onClick={() => onDelete()}\r\n          >\r\n            Yes\r\n          </MatButton>\r\n          <MatButton\r\n            variant=\"contained\"\r\n            className={classes.button}\r\n            startIcon={<CancelIcon />}\r\n            onClick={() => setModal(false)}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n          </MatButton>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <AddBiometricDevice\r\n        modalstatus={addNewDeviceModal}\r\n        togglestatus={togglesetAddNewDeviceModal}\r\n        loadBiometricDevices={loadBiometricDevices}\r\n      />\r\n      <EditBiometric\r\n        modalstatus={editDeviceModal}\r\n        togglestatus={togglesetEditDeviceModal}\r\n        datasample={collectModal}\r\n        loadBiometricDevices={loadBiometricDevices}\r\n      />\r\n      <Configuration toggleModal={toggleModal} showModal={showModal} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiometricList;\r\n","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\api.js",[],"C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\AddBiometric.js",["121","122","123","124"],"import React, { useState}   from 'react';\r\nimport {\r\n Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst AddBiometricDevice = (props) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [errors, setErrors] = useState({});\r\n    const [details, setDetails] =  useState({ active: \"\", name:\"\", url:\"\", port:\"\", type:\"\" })\r\n     \r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.parentId = details.parentId!==\"\" ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n        temp.active = details.active ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n    }\r\n\r\n    //Method to update module menu\r\n    const AddDevice = e => {\r\n        e.preventDefault()\r\n        if(validate()){\r\n            axios\r\n            .post(`${baseUrl}biometrics/device`,details,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => { \r\n                props.loadBiometricDevices()               \r\n                toast.success(\"Biometric Device Added Successfully!\")\r\n                setDetails({active: \"\", name:\"\", url:\"\", port:\"\", type:\"\"})\r\n                props.togglestatus()                  \r\n            })\r\n            .catch((error) => { \r\n                toast.error(\"Something went wrong. Please try again...\")   \r\n            });\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"md\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Add Biometric Device</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n     \r\n                    <div className=\"col-md-12 col-md-12\">\r\n                        <div className=\" card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <div className={classes.root}>\r\n                                    <form onSubmit={(e) => e.preventDefault()}>\r\n                                       \r\n                                        <div className=\"row\">\r\n                                            \r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label> Name *</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    id=\"name\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.name}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                />\r\n                                                {errors.name !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.name}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Url *</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"url\"\r\n                                                    id=\"url\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.url}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                    required\r\n                                                />\r\n                                                \r\n                                                 {errors.url !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.url}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Port</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"port\"\r\n                                                    id=\"port\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.port}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Default *</label>\r\n                                                <select\r\n                                                //defaultValue={\"true\"}\r\n                                                name=\"active\"\r\n                                                id=\"active\"\r\n                                                value={details.active}\r\n                                                className=\"form-control wide\"\r\n                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                onChange={handleOtherFieldInputChange}\r\n                                                >  \r\n                                                <option value=\"\"> Select</option>                                 \r\n                                                <option value=\"true\"> Yes</option>\r\n                                                <option value=\"false\">No</option>\r\n                                                </select>\r\n                                                {errors.active !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.active}</span>\r\n                                                ) : \"\" } \r\n                                            </div>\r\n\r\n                                            {/*Second Row of the Field by Col */}\r\n\r\n                                        </div>\r\n                                        <br/>\r\n                                        <MatButton\r\n                                            type='submit'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            className={classes.button}\r\n                                            startIcon={<SaveIcon />}\r\n                                            disabled={loading}\r\n                                            onClick={AddDevice}\r\n\r\n                                        >\r\n\r\n                                            <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                        </MatButton>\r\n                                        <MatButton\r\n                                            variant='contained'\r\n                                            color='default'\r\n                                            onClick={closeModal}\r\n                                            style={{backgroundColor:'#992E62'}}\r\n                                            startIcon={<CancelIcon />}>\r\n                                            <span style={{textTransform: 'capitalize', color:\"#fff\" }}>Cancel</span>\r\n                                        </MatButton>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddBiometricDevice;\r\n","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\jsx\\components\\Biometric\\EditBiometric.js",["125","126","127","128"],"import React, { useState, useEffect}   from 'react';\r\nimport {\r\n Spinner\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n//import EditIcon from \"@material-ui/icons/EditIcon\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\nconst EditBiometricDevice = (props) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const datasample = props.datasample ? props.datasample : {};\r\n    const [errors, setErrors] = useState({});\r\n    const [details, setDetails] =  useState(props.datasample )\r\n    useEffect(() => {\r\n        setDetails(props.datasample)\r\n    }, [props.datasample]);\r\n\r\n    const handleOtherFieldInputChange = e => {\r\n        setDetails ({ ...details, [e.target.name]: e.target.value });\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.parentId = details.parentId!==\"\" ? \"\" : \"This field is required\"\r\n        temp.url = details.url ? \"\" : \"This field is required\"\r\n        temp.name = details.name ? \"\" : \"This field is required\"\r\n        temp.active = details.active ? \"\" : \"This field is required\"\r\n        //temp.port = details.port ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    //Function to cancel the process\r\n    const closeModal = ()=>{\r\n        //resetForm()\r\n        props.togglestatus()\r\n    }\r\n\r\n    //Method to update module menu\r\n    const AddDevice = e => {\r\n        e.preventDefault()\r\n        if(validate()){\r\n            axios\r\n            .put(`${baseUrl}biometrics/device/${details.id}?active=${details.active}`,details,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {                \r\n                props.loadBiometricDevices()               \r\n                toast.success(\"Biometric Device Updated Successfully!\")\r\n                setDetails({active: \"\", name:\"\", url:\"\", port:\"\", type:\"\"})\r\n                props.togglestatus()                  \r\n            })\r\n            .catch((error) => { \r\n                toast.error(\"Something went wrong. Please try again...\")   \r\n            });\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Modal show={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"md\">\r\n                <Modal.Header toggle={props.togglestatus}>\r\n                    <Modal.Title>Edit Biometric Device</Modal.Title>\r\n                    <Button\r\n                        variant=\"\"\r\n                        className=\"btn-close\"\r\n                        onClick={props.togglestatus}\r\n                    ></Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n     \r\n                    <div className=\"col-md-12 col-md-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\">\r\n                                <div className={classes.root}>\r\n                                    <form onSubmit={(e) => e.preventDefault()}>\r\n                                       \r\n                                        <div className=\"row\">\r\n                                            \r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label> Name *</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    id=\"name\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.name}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                />\r\n                                                {errors.name !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.name}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Url *</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"url\"\r\n                                                    id=\"url\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.url}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                    required\r\n                                                />\r\n                                                \r\n                                                 {errors.url !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.url}</span>\r\n                                                ) : \"\" }\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Port </label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"port\"\r\n                                                    id=\"port\"\r\n                                                    className=\"form-control\"\r\n                                                    value={details.port}\r\n                                                    onChange={handleOtherFieldInputChange}\r\n                                                    required\r\n                                                />\r\n\r\n                                            </div>\r\n                                            <div className=\"form-group col-md-12\">\r\n                                                <label>Default *</label>\r\n                                                \r\n                                                <select\r\n\r\n                                                name=\"active\"\r\n                                                id=\"active\"\r\n                                                className=\"form-control wide\"\r\n                                                value={details.active}\r\n                                                onChange={handleOtherFieldInputChange}\r\n                                                >  \r\n                                                <option value=\"\"> Select</option>                                 \r\n                                                <option value=\"true\"> Yes</option>\r\n                                                <option value=\"false\">No</option>\r\n                                                </select>\r\n                                                {errors.active !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.active}</span>\r\n                                                ) : \"\" } \r\n                                            </div>\r\n\r\n                                            {/*Second Row of the Field by Col */}\r\n\r\n                                        </div>\r\n                                        <MatButton\r\n                                            type='submit'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            className={classes.button}\r\n                                            startIcon={<SaveIcon />}\r\n                                            disabled={loading}\r\n                                            onClick={AddDevice}\r\n\r\n                                        >\r\n\r\n                                            <span style={{textTransform: 'capitalize'}}>Save  {loading ? <Spinner /> : \"\"}</span>\r\n                                        </MatButton>\r\n                                        <MatButton\r\n                                            variant='contained'\r\n                                            color='default'\r\n                                            onClick={closeModal}\r\n                                            startIcon={<CancelIcon />}>\r\n                                            <span style={{textTransform: 'capitalize'}}>Cancel</span>\r\n                                        </MatButton>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default EditBiometricDevice;\r\n","C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\jsx\\layouts\\PageTitle.js",[],"C:\\Users\\victor.ajor\\LAMISPLUS_PROJECTs\\biometric-module\\src\\main\\webapp\\jsx\\components\\Pims\\Configuration.js",["129","130"],{"ruleId":"131","severity":1,"message":"132","line":4,"column":41,"nodeType":"133","messageId":"134","endLine":4,"endColumn":47},{"ruleId":"131","severity":1,"message":"132","line":3,"column":19,"nodeType":"133","messageId":"134","endLine":3,"endColumn":25},{"ruleId":"131","severity":1,"message":"135","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":14},{"ruleId":"131","severity":1,"message":"136","line":13,"column":10,"nodeType":"133","messageId":"134","endLine":13,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":19,"column":10,"nodeType":"139","messageId":"140","endLine":19,"endColumn":24,"fix":"141"},{"ruleId":"131","severity":1,"message":"142","line":83,"column":7,"nodeType":"133","messageId":"134","endLine":83,"endColumn":14},{"ruleId":"131","severity":1,"message":"143","line":95,"column":10,"nodeType":"133","messageId":"134","endLine":95,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":24,"fix":"144"},{"ruleId":"131","severity":1,"message":"145","line":87,"column":21,"nodeType":"133","messageId":"134","endLine":87,"endColumn":31},{"ruleId":"131","severity":1,"message":"146","line":88,"column":11,"nodeType":"133","messageId":"134","endLine":88,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":104,"column":49,"nodeType":"149","messageId":"150","endLine":104,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":24,"fix":"151"},{"ruleId":"131","severity":1,"message":"145","line":87,"column":21,"nodeType":"133","messageId":"134","endLine":87,"endColumn":31},{"ruleId":"131","severity":1,"message":"146","line":88,"column":11,"nodeType":"133","messageId":"134","endLine":88,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":108,"column":49,"nodeType":"149","messageId":"150","endLine":108,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":23,"column":10,"nodeType":"139","messageId":"140","endLine":23,"endColumn":24,"fix":"152"},{"ruleId":"131","severity":1,"message":"153","line":147,"column":9,"nodeType":"133","messageId":"134","endLine":147,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":4,"column":41,"nodeType":"133","messageId":"134","endLine":4,"endColumn":47},{"ruleId":"131","severity":1,"message":"132","line":3,"column":19,"nodeType":"133","messageId":"134","endLine":3,"endColumn":25},{"ruleId":"131","severity":1,"message":"135","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":14},{"ruleId":"131","severity":1,"message":"136","line":13,"column":10,"nodeType":"133","messageId":"134","endLine":13,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":19,"column":10,"nodeType":"139","messageId":"140","endLine":19,"endColumn":24,"fix":"154"},{"ruleId":"131","severity":1,"message":"142","line":83,"column":7,"nodeType":"133","messageId":"134","endLine":83,"endColumn":14},{"ruleId":"131","severity":1,"message":"143","line":95,"column":10,"nodeType":"133","messageId":"134","endLine":95,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":24,"fix":"155"},{"ruleId":"131","severity":1,"message":"145","line":87,"column":21,"nodeType":"133","messageId":"134","endLine":87,"endColumn":31},{"ruleId":"131","severity":1,"message":"146","line":88,"column":11,"nodeType":"133","messageId":"134","endLine":88,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":104,"column":49,"nodeType":"149","messageId":"150","endLine":104,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":24,"fix":"156"},{"ruleId":"131","severity":1,"message":"145","line":87,"column":21,"nodeType":"133","messageId":"134","endLine":87,"endColumn":31},{"ruleId":"131","severity":1,"message":"146","line":88,"column":11,"nodeType":"133","messageId":"134","endLine":88,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":108,"column":49,"nodeType":"149","messageId":"150","endLine":108,"endColumn":51},{"ruleId":"137","severity":1,"message":"138","line":23,"column":10,"nodeType":"139","messageId":"140","endLine":23,"endColumn":24,"fix":"157"},{"ruleId":"131","severity":1,"message":"153","line":148,"column":9,"nodeType":"133","messageId":"134","endLine":148,"endColumn":21},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'TiArrowBack' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"158","text":"159"},"'history' is assigned a value but never used.","'permissions' is assigned a value but never used.",{"range":"160","text":"159"},"'setLoading' is assigned a value but never used.","'datasample' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"161","text":"159"},{"range":"162","text":"159"},"'deleteConfig' is assigned a value but never used.",{"range":"163","text":"159"},{"range":"164","text":"159"},{"range":"165","text":"159"},{"range":"166","text":"159"},[888,902],"token",[471,485],[482,496],[488,502],[888,902],[471,485],[482,496],[488,502]]

